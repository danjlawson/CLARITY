% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClarityBootstrap.R
\name{Clarity_Bootstrap}
\alias{Clarity_Bootstrap}
\title{Bootstrap resample data to obtain distribution of predictions under a specified Clarity model}
\usage{
Clarity_Bootstrap(clearned, target = NULL, D = NULL, Ylist = NULL,
  H0 = "structure", nbs = 100, k = NULL, distfn = c_dist,
  summary = abs, diag = 0, seed = NULL, verbose = FALSE, ...)
}
\arguments{
\item{clearned}{either a ClarityScan or Clarity object. If a Clarity object, then residuals will be bootstrapped. If a ClarityScan object then Persistence will be bootstrapped, unless a specific k is given in which case Residuals are again calculated.}

\item{target}{(default=NULL) The target matrix Y that will be modelled by this bootstrapping result. Must be specified unless H0="value".}

\item{D}{(default=NULL) An N by L matrix containing N data items and L features. If provided, bootstrapped similarity matrices Ylist are generated by resampling features with replacement.}

\item{Ylist}{(default=NULL) A list of N by N similarity matrices generated exactly as the original data were generated.}

\item{H0}{(default="structure") The null hypothesis to be tested. The default test is that the "structure" has changed. Can also be set to "value" in which case no rotation to the target is done. (NB H1 is set in )}

\item{nbs}{(default=100) Number of bootstraps to use when D is provided.}

\item{k}{If specified and clearned is a ClarityScan object, residuals for this k are bootstrapped. (default: NULL, meaning use Persistences)}

\item{distfn}{Distance function to apply to the bootstrapped data, which should return a similarity or dissimilarity matrix. Default: c_dist, which is as,matrix(dist(x)).}

\item{summary}{(default=abs) Summarisation of the bootstrapped value when extracting Residuals. Default: abs, which allows residuals to be easily compared. Use summary=I to return the raw data. See \code{\link{Clarity_Extract}}.}

\item{diag}{(default=0) diagonal value to be applied when extracting Residuals. See \code{\link{Clarity_Extract}}.}

\item{seed}{Seed to reset the random number generator with. Default: NULL, meaning don't reset.}

\item{verbose}{Whether to print to screen each iteration. Default: FALSE}

\item{...}{Additional parameters to \code{\link{Clarity_Persistence}} (not required for normal usage)}
}
\value{
A list of length nbs, each containing a matrix
}
\description{
Takes a Clarity or ClarityScan object and create an ensemble of results for how it predicts a given target matrix. It will use a rank k representation from the Clarity object to generate the best fitting version of the target that has the learned rank k structure.

You can either provide a list of replicated similarity matrices, or some feature data from which bootstrap resamples can be taken from the features to result in a similarity matrix.

The assumption is that the training data (used to created clearned) is being bootstrapped. This might have a different scale and rotation to the test data, (defined in target). Therefore, if H0="structure" then the bootstrapped data is first Procrustes transformed to best match the target using \code{\link{Clarity_Procrust}}.

Each replicated similarity matrix is predicted by the model and summarised appropriately for comparison to data. Uses \code{\link{Clarity_Persistence}} for Persistences and \code{\link{Clarity_Predict}} directly for Residuals.
}
\examples{
\donttest{
scan=Clarity_Scan(dataraw) ## Core Clarity
predmix=Clarity_Predict(datamix,scan)
## Simple feature-based bootstrap for persistences
scanbootstrap=Clarity_Bootstrap(scan,target=datamix,D=datarawD)

## Construct a list of externally produced resamples
Dreplist=lapply(1:100,function(rep){
    datarawD[,sample(1:dim(datarawD)[2],
    dim(datarawD)[2], replace = TRUE)]
})
Yreplist=lapply(Dreplist,c_dist)
## NB Yreplist can have come from a complex resampling scheme

## Bootstrap based on arbitrary resampling scheme
scanbootstrap=Clarity_Bootstrap(scan,target=datamix,Ylist=Yreplist)

## Plot bootstrapped persistence chart
predplot=plot(predmix,signif=scanbootstrap)

## Similarly for Residuals
k10bootstrap=Clarity_Bootstrap(Clarity_Extract(scan,10),
                 target=datamix,
                 D=datarawD)
predplot=plot(Clarity_Extract(predmix,10),
    signif=k10bootstrap)
}
}
\seealso{
\code{\link{Clarity_Scan}} to run Clarity, \code{\link{Clarity_Extract}} to extract residuals and persistences, \code{\link{plot.ClarityScan}} and \code{\link{plot.Clarity}} for plotting.
}
