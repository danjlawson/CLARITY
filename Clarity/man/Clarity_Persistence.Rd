% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClarityBootstrap.R
\name{Clarity_Persistence}
\alias{Clarity_Persistence}
\title{Compute the Persistence of a ClarityScan object}
\usage{
Clarity_Persistence(clist, f = "RowSumsSquared", what = "Yresid",
  summary = abs)
}
\arguments{
\item{clist}{A ClarityScan object, or a list of matrices}

\item{f}{(Default="RowSumsSquared" which generates Persistences) Either a character string matching "Frobenius" or "RowSumsSquared", or a function to compute for each matrix, which should return a vector when operating on a matrix. "Frobenius" is the Frobenius norm of the matrix (sum(x^2)), which results in a vector being returned, whereas "RowSumsSquared" evaluates as rowSums(x^2) and means a persistence matrix is returned.}

\item{what}{(Default="Yresid") What to extract from the ClarityScan object. "Y" and "prediction" can be extracted.}

\item{summary}{(Default=abs) Summary to be applied to the extracted matrices.}
}
\value{
$f$ evaluated at each $k$, which results in an $N$ by $k$ matrix by default (where $N$ is the number of data items and $k$ is the maximum complexity)
}
\description{
Perform an operation on a list of matrices in order to compute a Persistence Structure. By default, it computes
$$P_{ik} = \sum_{j=1^}N (Y_{ij} - \hat{Y}^k_{ij})^2$$
in the notation of Lawson et al 2019 CLARITY paper, where $Y$ is the provided data matrix and $\hat{Y}^k$ is the predicted matrix at complexity $k$.
}
\seealso{
\code{\link{Clarity_Extract}}
}
