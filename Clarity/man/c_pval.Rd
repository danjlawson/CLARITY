% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClarityBootstrap.R
\name{c_pval}
\alias{c_pval}
\title{Compare Observed to Bootstrap values}
\usage{
c_pval(testbs, obs, comparison = c_CompareNormal)
}
\arguments{
\item{testbs}{A list of bootstrapped matrices as returned from \code{\link{c_Bootstrap}}}

\item{obs}{Either a Clarity object (for comparing residuals), A ClarityScan object (for comparing persistences) or a matrix of observed values (absolute residuals or persistences, respectively)}

\item{comparison}{(default=\code{\link{c_CompareNormal}}) a function to score the observed value relative to the bootstraped values. The default performs a one-tailed test that the observed value is large compared to the bootstrapped values, using a normal approximation of the distributions. This is usually the best choice, but \code{\link{c_CompareNormalTwoTailed}} , \code{\link{c_CompareEmpirical}} and \code{\link{c_CompareEmpiricalTwoTailed}} can be used instead.}
}
\value{
A matrix of the same shape as obs, containing the result of comparison applied to each element
}
\description{
For each element in an observed matrix, extract out the corresponding elements in a list of bootstrapped versions of that matrix. Report on the position of the observed value relative to the bootstrapped values. By default this returns the results in the form of a p-value for a test with the alternative that the observed value is larger than the bootstraps (and the null that it is not)


Also note that for normal use you might just want to use \code{\link{plot.Clarity}} or \code{\link{plot.ClarityScan}}, both of which use this function for you.
}
\examples{
\donttest{
scan=Clarity_Scan(dataraw) ## Core Clarity
predmix=Clarity_Predict(datamix,scan) ## Core prediction

## Bootstrap persistences:
scanbootstrap=c_Bootstrap(scan,target=datamix,D=datarawD)
## Extract observed persistences
P=Clarity_Persistence(predmix)
## Compute pvalues
pvals=c_pval(scanbootstrap,P)
## pvals is a matrix of dimension N by K
signif=pvals<0.01
## signif is a logical matrix of dimension N by K

## Similarly for residuals:
## Bootstrap residuals
k10bootstrap=c_Bootstrap(Clarity_Extract(scan,10),
                               target=datamix,
                               D=datarawD)
## Extract observed residuals
k10residuals=Clarity_Extract(predmix,k=10)
## Compute Pvals
residualpvals=c_pval(k10bootstrap,k10residuals,
                        population="bestcol")
residualsignif=residualpvals<0.01

}
}
\seealso{
\code{\link{c_Bootstrap}} for making bootstraps. For plotting, \code{\link{plot.Clarity}} or \code{\link{plot.ClarityScan}} call this function for you.  \code{\link{Clarity_Persistence}} for extracting persistence or  \code{\link{Clarity_Extract}} to extract residuals.
}
